with your back to the wall turn right===(b / back :arg2 (t / turn :arg1 (w / wall)) :mod (r / right) :mod r)===with your obj to the obj obj obj===(o / obj :arg2 (o / obj :arg1 (o / obj)) :mod (o / obj) :mod r)
move along the brick past the lamp to the hatrack===(m / move :location (a / along :op1 (p / past)))===obj along the obj past the obj to the obj===(o / obj :location (a / along :op1 (p / past)))
turn left===(l / obj :arg1 (t / turn))===obj mod===(o / obj :arg1 (o / obj))
move along the flowers to the blue carpeted side alleys===(a / along :op1 (m / move :arg2 (s / side)))===obj along the obj to the obj event mod obj===(a / along :op1 (o / obj :arg2 (m / mod)))
this is x===(t / this)===thevent event mod===(t / thevent)
turn so that the wall is on your right===(t / turn :purpose (w / wall :topic x :domain (x / entitle) :polarity -))===obj mod that the obj event on your obj===(o / obj :purpose (o / obj :topic x :domain (x / entitle) :polarity -))
walk forward once===(o / once :direction (f / forward))===obj mod mod===(o / mod :direction (m / mod))
turn left to face the yellow hallway===(l / obj :arg0 (t / turn) :arg1 (f / face :arg1 (y / yellow)))===obj mod to event the mod obj===(o / obj :arg0 (o / obj) :arg1 ( e / event  :arg1 (m / mod)))
walk forward to the far end===(f / forward :arg2 (e / end :arg1 (f2 / far)))===obj mod to the mod obj===(f / mod :arg2 (o / obj :arg1 (f2 / mod)))
face the green carpeting===(f / face :arg1 (g / green))===obj the mod obj===(o / obj :arg1 (m / mod))
move to the wall and turn left===(l / obj :arg1 (a / and :op1 (m / move :arg1 (w / wall)) :op2 (t / turn)))===obj to the obj and obj mod===(o / obj :arg1 (a / and :op1 (o / obj :arg1 (o / obj)) :op2 (o / obj)))
move along the blue carpeting until you get to wooden flooring===(m / move :path (a / along :op1 (g / get)) :time (u / until :op1 g))===obj along the mod obj until you event to event obj===(o / obj :path (a / along :op1 ( e / event )) :time (u / until :op1 g))
turn left===(l / obj :arg1 (t / turn))===obj mod===(o / obj :arg1 (o / obj))
move forward one alley===(m / move :arg1 (U / UNK :mod 1 :direction (f / forward)))===event mod one obj===( e / event  :arg1 (U / UNK :mod 1 :direction (m / mod)))
you should see gray floor to your right===(U / UNK :arg2 (e / entitle) :arg0 e :part (g / gray) :purpose (s / see) :arg1-of (r / recommend) :arg2 e)===you should event mod obj to your obj===(U / UNK :arg2 (e / entitle) :arg0 e :part (m / mod) :purpose ( e / event ) :arg1-of (r / recommend) :arg2 e)
turn so the wall is on your back===(t / turn :arg2 (b / back :arg0 (w / wall) :arg1 w))===obj mod the obj event on your obj===(o / obj :arg2 (o / obj :arg0 (o / obj) :arg1 w))
walk forward twice===(f / forward)===obj obj obj===(o / obj)
turn right===(t / turn :arg1 (r / right))===obj obj===(o / obj :arg1 (o / obj))
walk forward once===(o / once :direction (f / forward))===obj mod mod===(o / mod :direction (m / mod))
turn so that the wall is on your left===(t / turn :purpose (l / obj :arg0 (w / wall) :arg1 w :polarity -))===obj mod that the obj event on your mod===(o / obj :purpose (o / obj :arg0 (o / obj) :arg1 w :polarity -))
walk forward to the end of the hallway===(w / walk :direction (f / forward) :purpose (e / end))===obj mod to the obj of the obj===(o / obj :direction (m / mod) :purpose (o / obj))
turn left===(l / obj :arg1 (t / turn))===obj mod===(o / obj :arg1 (o / obj))
walk forward twice===(f / forward)===obj obj obj===(o / obj)
turn left===(l / obj :arg1 (t / turn))===obj mod===(o / obj :arg1 (o / obj))
walk forward once===(o / once :direction (f / forward))===obj mod mod===(o / mod :direction (m / mod))
take the black path towards the red brick intersection===(t / take :arg1 (U / UNK :arg2 (r / red) :arg1 (p / path) :mod (b / black)))===event the mod obj towards the mod obj obj===( e / event  :arg1 (U / UNK :arg2 (m / mod) :arg1 (o / obj) :mod (m / mod)))
go left onto the red brick===(g / go :arg1-of (l / obj) :arg4 (o / onto :op1 (r / red)))===event mod onto the mod obj===( e / event  :arg1-of (o / obj) :arg4 (o / onto :op1 (m / mod)))
then , take another left at the pink flowered intersection onto the pink path===(p / path :duration (l / obj :arg1 (o / onto) :mod (a / another)) :time (t / then))===mod , event another mod at the obj event obj onto the obj obj===(o / obj :duration (o / obj :arg1 (o / onto) :mod (a / another)) :time (m / mod))
go until there are fish on the wall and you can either only go left or towards a dead end===(g / go :time (u / until :op1 (a / and :op1 (w / wall) :op2 x)) :mod (p / possible :op1 (o / or :op1 (g2 / go :arg1-of (l / obj)) :op2 (x / go :arg2 (e / end)) :mod (o2 / only))))===event until there event mod on the obj and you can event mod event mod or event a mod obj===( e / event  :time (u / until :op1 (a / and :op1 (o / obj) :op2 x)) :mod (p / possible :op1 (o / or :op1 (g2 / event :arg1-of (o / obj)) :op2 (x / event :arg2 (o / obj)) :mod (o2 / mod))))
this is x===(t / this)===thevent event mod===(t / thevent)
go towards the coat rack and take a left at the coat rack===(g / go :arg1 (l / left))===event towards the obj obj and event a mod at the obj obj===( e / event  :arg1 (m / mod))
go all the way to the end of the hall and this is x===(a / and :op1 (g / go :arg1 (a2 / all :purpose (e / end) :arg2 (w / way))) :op2 (b / be-located-at-91 :arg1 (t / this)))===event all the obj to the obj of the obj and thevent event mod===(a / and :op1 ( e / event  :arg1 (a2 / all :purpose (o / obj) :arg2 (o / obj))) :op2 (b / be-located-at-91 :arg1 (t / thevent)))
with your back to the wall move forward past the hatrack===(U / UNK :arg2 x :arg2 (p / past :arg1 (w / wall :arg1 (x / move)) :direction (f / forward)))===with your obj to the obj obj mod past the obj===(U / UNK :arg2 x :arg2 (p / past :arg1 (o / obj :arg1 (o / obj)) :direction (m / mod)))
stop at the alley where there is green octagon floor to your left===(s / stop :arg1 (g / green :arg0 x :domain (x / country :name (l / left))))===obj at the obj where there event mod obj obj to your mod===(o / obj :arg1 (g / mod :arg0 x :domain (x / country :name (m / mod))))
this is x===(t / this)===thevent event mod===(t / thevent)
go straight towards the pink path===(g / go :arg1 (p / path))===event mod obj the obj obj===( e / event  :arg1 (o / obj))
at this intersection , go left onto the pink path===(l / obj :arg1 (g / go :domain (t / this)) :polarity (o / onto :op1 (p / path)))===at this obj , event mod onto the mod obj===(o / obj :arg1 ( e / event  :domain (t / this)) :polarity (o / onto :op1 (o / obj)))
at the very next intersection , go right onto the blue path===(g / go :arg1 (e / entitle :mod (n / next) :degree (v / very)) :arg4 (o / onto :op1 (p / path)))===at the mod mod obj , event mod onto the mod obj===( e / event  :arg1 (e / entitle :mod (m / mod) :degree (m / mod)) :arg4 (o / onto :op1 (o / obj)))
at the end of this hall at the corner , go left towards the easel===(g / go :arg1 (l / obj) :time (e / end :arg1 (t / this)))===at the obj of this obj at the obj , event mod obj the obj===( e / event  :arg1 (o / obj) :time (o / obj :arg1 (t / this)))
take a right at the easel onto the wood path and the first section you come to will be x===(t / take :arg1 (a / and :op1 (e / entitle :arg1 (o / onto)) :op2 (p / path) :op3 (s / section :ord (o2 / ordinal-entity :value 1) :part-of (c / come :arg0 a))))===event a obj at the obj onto the obj obj and the mod obj you event to will event mod===( e / event  :arg1 (a / and :op1 (e / entitle :arg1 (o / onto)) :op2 (o / obj) :op3 (o / obj :ord (o2 / ordinal-entity :value 1) :part-of (c / event :arg0 a))))
go until hall ends===(g / go :time (u / until :op1 (e / end)))===event until hall obj===( e / event  :time (u / until :op1 (e / end)))
take a left===(t / take :arg1 (l / obj))===event a mod===( e / event  :arg1 (o / obj))
go until hall ends===(g / go :time (u / until :op1 (e / end)))===event until hall obj===( e / event  :time (u / until :op1 (e / end)))
take a left===(t / take :arg1 (l / obj))===event a mod===( e / event  :arg1 (o / obj))
the next intersection of yellow and black paths is x===(U / UNK :time (n / next) :poss (a / and :op1 (p / path :mod (y / yellow)) :op2 (p2 / path :mod (b / black))))===the mod obj of mod and mod obj event mod===(U / UNK :time (m / mod) :poss (a / and :op1 (p / path :mod (m / mod)) :op2 (p2 / path :mod (m / mod))))
turn so the wall is on your left===(t / turn :purpose (l / obj :arg0 (w / wall) :arg1 w))===obj mod the obj event on your mod===(o / obj :purpose (o / obj :arg0 (o / obj) :arg1 w))
walk forward three times , or until you reach the pink walkway===(o / or :op1 (w / walk :arg0 o :arg1 (f / forward :op1 (t / time :mod 3))) :op2 (u / until :op1 (r / reach :arg0 o)))===obj mod three obj , or until you event the obj objway===(o / or :op1 (o / obj :arg0 o :arg1 (f / mod :op1 (t / time :mod 3))) :op2 (u / until :op1 ( e / event  :arg0 o)))
turn right===(t / turn :arg1 (r / right))===obj obj===(o / obj :arg1 (o / obj))
walk forward until you reach the red walkway===(r / reach :arg1 (r2 / red) :direction (f / forward) :time (u / until :op1 f))===obj mod until you event the mod objway===( e / event  :arg1 (r2 / mod) :direction (m / mod) :time (u / until :op1 f))
there should be a painting easel there too===(r / recommend :arg1 (t / too))===mod should event a mod obj mod mod===(r / recommend :arg1 (m / mod))
move to the other end of the alley and turn right===(a / and :op1 (m / move :purpose (e / end :mod (o / other))) :op2 (t / turn :mod (r / right)))===obj to the mod obj of the obj and event mod===(a / and :op1 (o / obj :purpose (o / obj :mod (m / mod))) :op2 ( e / event  :mod (m / mod)))
move along the stone floor to the sofa chair===(m / move :path (a / along :op1 (s / stone-throwing)) :arg2 (c / chair))===obj along the obj obj to the obj obj===(o / obj :path (a / along :op1 (o / obj-throwing)) :arg2 (o / obj))
turn left===(l / obj :arg1 (t / turn))===obj mod===(o / obj :arg1 (o / obj))
move to this sofa chair and turn right===(a / and :op1 (m / move :arg1 (t / this)) :op2 (c / chair) :op3 (t2 / turn :mod (r / right)))===obj to this obj obj and event mod===(a / and :op1 (o / obj :arg1 (t / this)) :op2 (o / obj) :op3 (t2 / event :mod (m / mod)))
move to the next alley===(m / move :arg1 (n / next))===obj to the mod obj===(o / obj :arg1 (m / mod))
to your left is grey flooring and in front of you is brick===(l / left :arg0 l :mod (f / front) :arg0 f)===to your mod event mod event and in obj of you event mod===(l / mod :arg0 l :mod (o / obj) :arg0 f)
this is x===(t / this)===thevent event mod===(t / thevent)
follow the plain cement towards the blue path intersection===(f / follow :arg1 (U / UNK :arg2 (p / path) :mod (p2 / plain)))===event the obj obj towards the mod obj obj===( e / event  :arg1 (U / UNK :arg2 (o / obj) :mod (p2 / obj)))
this will be position x===(p / position :arg1 (t / this))===this will event obj x===(o / obj :arg1 (t / this))
go away from the lamp to the intersection of the red brick and wood===(g / go :arg1 (r / red))===event mod from the obj to the obj of the mod obj and obj===( e / event  :arg1 (m / mod))
take a left onto the wood===(o / onto :arg0 (l / obj))===event a mod onto the obj===(o / onto :arg0 (o / obj))
position x is one section down at the bench===(s / section :domain (p / position) :mod 1)===obj obj event one obj mod at the obj===(o / obj :domain (o / obj) :mod 1)
go toward the bench at the end of the hall with pink-flowered carpet===(g / go :time (e / end))===event toward the obj at the obj of the obj with mod obj===( e / event  :time (o / obj))
turn right at the bench into the yellow tiled hall===(t / turn :arg2 (e / entitle :arg1 (y / yellow)))===obj obj at the obj into the obj event obj===(o / obj :arg2 (e / entitle :arg1 (o / obj)))
go two segments to the intesection with the stone-floored hallway this intersection contains an easel===(g / go :arg1 (p / person :mod 2) :arg1 (c / contain :arg1 (t / this)))===event two obj to the obj with the mod obj this obj event an obj===( e / event  :arg1 (p / person :mod 2) :arg1 (c / contain :arg1 (t / this)))
this is position x===(p / position :domain (t / this))===thevent event obj obj===(o / obj :domain (t / thevent))
with your back to the wall turn right===(b / back :mod x :arg2 (t / turn :arg1 (w / wall)) :mod (x / right))===with your obj to the obj obj obj===(o / obj :mod x :arg2 (o / obj :arg1 (o / obj)) :mod (o / obj))
move forward past the lamp and the hatrack until you get to the stone floor===(m / move :direction (f / forward) :time (p / past :op1 (a / and :op1 (g / get :arg2 (s / stone-throwing)) :op2 (g2 / get :arg2 (s2 / stone-throwing)))) :time (u / until :op1 s2))===event mod past the obj and the obj until you event to the obj obj===( e / event  :direction (m / mod) :time (p / past :op1 (a / and :op1 (g / event :arg2 (o / obj-throwing)) :op2 (g2 / event :arg2 (s2 / obj-throwing)))) :time (u / until :op1 s2))
turn right===(t / turn :arg1 (r / right))===obj obj===(o / obj :arg1 (o / obj))
move along the stone floor until you get to the octagon side alleys===(m / move :path (a / along :op1 (g / get :arg2 (s / side) :mod (s2 / stone-throwing))) :time (u / until :op1 g))===obj along the obj obj until you event to the mod obj obj===(o / obj :path (a / along :op1 ( e / event  :arg2 (o / obj) :mod (s2 / obj-throwing))) :time (u / until :op1 g))
you are one block away from an easel===(U / UNK :arg2 (a / away) :mod (b / block) :mod 1 :arg0 U)===you event one obj mod from an obj===(U / UNK :arg2 (m / mod) :mod (o / obj) :mod 1 :arg0 U)
this is x===(t / this)===thevent event mod===(t / thevent)
take the pink path to the red brick juncture===(t / take :arg1 (p / path :arg2 (j / join :mod (r / red))))===event the mod obj to the mod obj obj===( e / event  :arg1 (o / obj :arg2 (j / join :mod (m / mod))))
go left onto the red brick===(g / go :arg1-of (l / obj) :arg4 (o / onto :op1 (r / red)))===event mod onto the mod obj===( e / event  :arg1-of (o / obj) :arg4 (o / onto :op1 (m / mod)))
postition x is one section past the lamp===(U / UNK :time (p / past) :mod (s / section) :mod 1)===obj obj event one obj past the obj===(U / UNK :time (p / past) :mod (o / obj) :mod 1)
move one space toward the easel===(m / move :arg1 (U / UNK :mod (s / space) :mod 1))===event one obj toward the obj===( e / event  :arg1 (U / UNK :mod (o / obj) :mod 1))
go forward===(g / go :arg1 (f / forward))===event mod===( e / event  :arg1 (m / mod))
turn left===(l / obj :arg1 (t / turn))===obj mod===(o / obj :arg1 (o / obj))
go down this hallway until you see the fish hallways===(g / go :arg1 (s / see :mod (t / this)) :time (u / until :op1 g))===event down this obj until you event the obj objs===( e / event  :arg1 (s / event :mod (t / this)) :time (u / until :op1 g))
find the easel in this area , that is pos x===(f / find :location (a / area :mod (t / this)))===event the obj in thevent obj , that event mod obj===( e / event  :location (o / obj :mod (t / thevent)))
face and move past the chair to the end of the blue flooring===(a / and :op1 (f / face) :op2 (m / move :time (p / past :op1 (c / chair)) :purpose (e / end)))===obj and event past the obj to the obj of the obj obj===(a / and :op1 (o / obj) :op2 ( e / event  :time (p / past :op1 (o / obj)) :purpose (o / obj)))
turn left and move to the easel===(a / and :op1 (t / turn) :op2 (l / obj) :op3 (m / move))===obj mod and event to the obj===(a / and :op1 (o / obj) :op2 (o / obj) :op3 ( e / event ))
at the easel turn right and walk down the longer alley===(a / and :op1 (t / turn :arg1 (e / entitle)) :op2 (w / walk :arg1 (l / long)))===at the obj obj mod and event down the mod obj===(a / and :op1 (o / obj :arg1 (e / entitle)) :op2 ( e / event  :arg1 (l / long)))
turn left===(l / obj :arg1 (t / turn))===obj mod===(o / obj :arg1 (o / obj))
move past the lamp into the corner===(m / move :arg1 (p / past))===obj past the obj into the obj===(o / obj :arg1 (p / past))
from x you should be able to look left and see a hatrack===(a / and :op1 (r / recommend :arg1 (p / possible :domain (l / look :arg0 a))) :op2 (l2 / obj) :op3 (s / see))===from obj you should event mod to event mod and event a obj===(a / and :op1 (r / recommend :arg1 (p / possible :domain ( e / event  :arg0 a))) :op2 (l2 / obj) :op3 (s / event))
go left until you come to the four way intersection of the red and rose floors , with an easel===(g / go :arg1 (c / come :arg1-of (l / obj :time (u / until :op1 x))) :purpose (x / way :mod 4) :purpose (r / red :mod 4) :purpose (r2 / rise :arg4 4))===event mod until you event to the four obj obj of the mod and event obj , with an obj===( e / event  :arg1 (c / event :arg1-of (o / obj :time (u / until :op1 x))) :purpose (o / obj :mod 4) :purpose (r / mod :mod 4) :purpose (r2 / rise :arg4 4))
take the black path away from the bench to the very end of the hall===(t / take :arg1 (U / UNK :source (p / path :arg2 (e / end :degree (v / very))) :arg2 (a / away) :mod (b / black)))===event the mod obj mod from the obj to the mod obj of the obj===( e / event  :arg1 (U / UNK :source (o / obj :arg2 (o / obj :degree (m / mod))) :arg2 (m / mod) :mod (m / mod)))
here , take a left onto the yellow path===(t / take :arg0 (p / path :prep-instead-of (o / onto :accompanier (p2 / path :mod (y / yellow))) :arg2 (l / left)) :destination (h / here))===mod , event a mod onto the mod obj===( e / event  :arg0 (o / obj :prep-instead-of (o / onto :accompanier (p2 / obj :mod (m / mod))) :arg2 (m / mod)) :destination (m / mod))
follow the path to the opposite end of the hall and here is x===(f / follow :arg2 (p / path :poss (h / here) :time (e / end)))===event the obj to the mod obj of the obj and mod event mod===( e / event  :arg2 (o / obj :poss (m / mod) :time (o / obj)))
go right one move===(g / go :arg1 (r / right :op1 (m / move :mod 1)))===event mod one obj===( e / event  :arg1 (r / mod :op1 (o / obj :mod 1)))
intersection of the gray hallway===(g / gray)===obj of the mod obj===(m / mod)
place your back to the wall of the t intersection===(U / UNK :arg0 U :purpose (w / wall))===obj your obj objo objhe obj of objhe obj inobjersecobjion===(U / UNK :arg0 U :purpose (o / obj))
turn right===(t / turn :arg1 (r / right))===obj obj===(o / obj :arg1 (o / obj))
go forward one segment to the end of the hall===(g / go :arg1 (U / UNK :arg2 (e / end) :mod 1 :direction (f / forward)))===event mod one obj to the obj of the obj===( e / event  :arg1 (U / UNK :arg2 (o / obj) :mod 1 :direction (m / mod)))
turn right===(t / turn :arg1 (r / right))===obj obj===(o / obj :arg1 (o / obj))
go forward two segments to the blue-tiled hall===(g / go :arg1 (f / forward :op1 (p / person :mod 2)))===event mod two obj to the mod obj===( e / event  :arg1 (f / mod :op1 (p / person :mod 2)))
turn right===(t / turn :arg1 (r / right))===obj obj===(o / obj :arg1 (o / obj))
go forward to the intersection with the yellow-tiled hall===(g / go :arg1 (f / forward))===event mod to the obj with the mod obj===( e / event  :arg1 (m / mod))
this intersection contains a hatrack===(c / contain :arg1 (t / this))===this obj event a obj===(c / contain :arg1 (t / this))
turn left===(l / obj :arg1 (t / turn))===obj mod===(o / obj :arg1 (o / obj))
go forward two segments to the end of the hall===(g / go :direction (p / person :year 2 :direction (f / forward)) :arg4 (e / end))===event mod two obj to the obj of the obj===( e / event  :direction (p / person :year 2 :direction (m / mod)) :arg4 (o / obj))
this is position x===(p / position :domain (t / this))===thevent event obj obj===(o / obj :domain (t / thevent))
go towards the red brick intersection===(g / go :arg2 (r / red))===event towards the mod obj obj===( e / event  :arg2 (m / mod))
take a right onto the red brick===(t / take :arg1 (U / UNK :source-of (o / onto :mod (r / red)) :arg2 (e / entitle)))===event a obj onto the mod obj===( e / event  :arg1 (U / UNK :source-of (o / onto :mod (m / mod)) :arg2 (e / entitle)))
go all the way down until you reach the black intersection===(g / go :arg1 (r / reach :mod (a / all)) :arg1 (w / way) :time (u / until :op1 w) :arg1 (b / black))===event all the obj down until you event the mod obj===( e / event  :arg1 (r / event :mod (a / all)) :arg1 (o / obj) :time (u / until :op1 w) :arg1 (m / mod))
take a right onto this===(t / take :arg1 (e / entitle :arg2-of (o / onto :domain (t2 / this))))===event a mod obj this===( e / event  :arg1 (e / entitle :arg2-of (o / obj :domain (t2 / this))))
when you reach an intersection with black and normal concrete , you are at x===(r / reach :arg0 (U / UNK :domain U :mod x) :arg1 (c / concrete :mod (x / black) :mod (n / normal)))===when you event an obj with mod and mod obj , you event at obj===( e / event  :arg0 (U / UNK :domain U :mod obj) :arg1 (o / obj :mod (obj / mod) :mod (m / mod)))
turn so the wall is on your left===(t / turn :purpose (l / obj :arg1 x :arg0 (x / wall)))===obj mod the obj event on your mod===(o / obj :purpose (o / obj :arg1 x :arg0 (o / obj)))
walk forward once===(o / once :direction (f / forward))===obj mod mod===(o / mod :direction (m / mod))
turn right===(t / turn :arg1 (r / right))===obj obj===(o / obj :arg1 (o / obj))
walk forward four times===(n / newspaper :name (n2 / name :op1 "The" :op2 "Times") :year 4 :direction (f / forward))===event mod four obj===(n / newspaper :name (n2 / name :op1 "The" :op2 "Times") :year 4 :direction (m / mod))
turn right on the pink hallway===(t / turn :arg1 (r / right))===obj obj on the obj obj===(o / obj :arg1 (o / obj))
walk forward twice===(f / forward)===obj obj obj===(o / obj)
make a right toward the pink floored area===(m / make :arg1 (e / entitle :arg2 (a / area)))===event a mod toward the obj event obj===( e / event  :arg1 (e / entitle :arg2 (o / obj)))
go down till the fish are on the walls===(g / go :arg1 (w / wall))===event down mod the obj event on the obj===( e / event  :arg1 (w / wall))
make the first left in to the fish hallways===(m / make :arg1 (l / obj :ord (o / ordinal-entity :value 1)))===event the mod mod in to the obj obj===( e / event  :arg1 (o / obj :ord (o / ordinal-entity :value 1)))
follow this for as far as it will go===(f / follow :arg1 (t / this) :arg2 (g / go :arg0 x) :arg2 (x / far))===event this for mod mod mod it will event===( e / event  :arg1 (t / this) :arg2 (g / event :arg0 x) :arg2 (m / mod))
go to the longer end of the pink floored area===(g / go :purpose (l / long :domain (e / end :arg1 (a / area))))===event to the mod obj of the obj event obj===( e / event  :purpose (l / long :domain (o / obj :arg1 (o / obj))))
go to the end of this hallway , till you get to blue floored area===(g / go :purpose (e / end :arg1 (a / area :arg1-of (g2 / get :arg0 g) :mod (t / this))))===event to the obj of this obj , event you event to event mod obj===( e / event  :purpose (o / obj :arg1 (o / obj :arg1-of (g2 / event :arg0 g) :mod (t / this))))
take a left===(t / take :arg1 (l / obj))===event a mod===( e / event  :arg1 (o / obj))
take the blue hall to the grassy hall===(t / take)===event the obj obj to the obj obj===( e / event )
then the grassy hall to the yellow hall until they intersect===(y / yellow :time (u / until :op1 x) :time (x / then))===mod the obj obj to the mod obj until they event===(y / mod :time (u / until :op1 x) :time (m / mod))
take the path towards the chair===(t / take :arg1 (p / path :arg2 (c / chair)))===event the obj towards the obj===( e / event  :arg1 (o / obj :arg2 (o / obj)))
at the chair , go left onto the blue path===(l / obj :arg1 (g / go :arg0 (c / chair)) :arg0 (o / onto :arg0 (p / path)))===at the obj , event mod onto the mod obj===(o / obj :arg1 ( e / event  :arg0 (o / obj)) :arg0 (o / onto :arg0 (o / obj)))
at the end of the hall , take a left towards the easel===(e / end :arg1 (l / left))===at the obj of the obj , event a mod event the obj===(o / obj :arg1 (m / mod))
at the easel , go right onto the wood path and the very first section will be x===(g / go :arg1 (r / right) :arg4 (o / onto :op1 (a / and :op1 (p / path) :op2 (s / section :ord (o2 / ordinal-entity :value 1) :degree (v / very)))))===at the obj , event mod onto the obj obj and the mod mod obj will event mod===( e / event  :arg1 (m / mod) :arg4 (o / onto :op1 (a / and :op1 (o / obj) :op2 (o / obj :ord (o2 / ordinal-entity :value 1) :degree (m / mod)))))
face the easel===(f / face)===obj the obj===(o / obj)
go forward one segment to the intersection containing the easel===(g / go :arg1 (U / UNK :arg1 (c / contain :arg0 U) :mod 1 :direction (f / forward)))===event mod one obj to the obj event the obj===( e / event  :arg1 (U / UNK :arg1 (c / contain :arg0 U) :mod 1 :direction (m / mod)))
turn left===(l / obj :arg1 (t / turn))===obj mod===(o / obj :arg1 (o / obj))
go forward one segment to the intersection with the the blue-tiled floor===(g / go :arg1 (U / UNK :mod 1 :direction (f / forward)))===event mod one obj to the obj with the the mod obj===( e / event  :arg1 (U / UNK :mod 1 :direction (m / mod)))
turn right===(t / turn :arg1 (r / right))===obj obj===(o / obj :arg1 (o / obj))
go forward one segment to the intersection with the pink-flowered carpet hall===(g / go :arg1 (U / UNK :mod 1 :direction (f / forward)))===event mod one obj to the obj with the mod obj obj===( e / event  :arg1 (U / UNK :mod 1 :direction (m / mod)))
turn left===(l / obj :arg1 (t / turn))===obj mod===(o / obj :arg1 (o / obj))
go forward one segment===(g / go :arg1 (U / UNK :mod 1 :direction (f / forward)))===event mod one obj===( e / event  :arg1 (U / UNK :mod 1 :direction (m / mod)))
turn right===(t / turn :arg1 (r / right))===obj obj===(o / obj :arg1 (o / obj))
go forward one segment===(g / go :arg1 (U / UNK :mod 1 :direction (f / forward)))===event mod one obj===( e / event  :arg1 (U / UNK :mod 1 :direction (m / mod)))
this is position x===(p / position :domain (t / this))===thevent event obj obj===(o / obj :domain (t / thevent))
with your back to the wall move forward to the hatrack===(U / UNK :arg2 x :purpose (w / wall :arg1 (x / move)) :direction (f / forward))===with your obj to the obj obj mod to the obj===(U / UNK :arg2 x :purpose (o / obj :arg1 (o / obj)) :direction (m / mod))
turn left===(l / obj :arg1 (t / turn))===obj mod===(o / obj :arg1 (o / obj))
move along the brick alley til you reach the alley with the stone floor===(m / move :location (a / along :op1 (r / reach :arg0 x :arg1 (x / stone-throwing))))===obj along the obj obj til you event the obj with the obj obj===(o / obj :location (a / along :op1 ( e / event  :arg0 x :arg1 (o / obj-throwing))))
turn left===(l / obj :arg1 (t / turn))===obj mod===(o / obj :arg1 (o / obj))
move along the stone floor till you reach the alley with green octagon carpet===(m / move :arg1 (r / reach :arg0 x) :location (a / along :op1 (x / stone-throwing)))===obj along the obj obj till you event the obj with mod obj obj===(o / obj :arg1 ( e / event  :arg0 x) :location (a / along :op1 (o / obj-throwing)))
there should be an easel one block in front of you===(r / recommend :arg1 (b / block :mod 1 :arg0 (i / in-front-of :op1 b)))===there should event an mod one obj in obj of you===(r / recommend :arg1 (o / obj :mod 1 :arg0 (i / in-obj-of :op1 b)))
this is x===(t / this)===thevent event mod===(t / thevent)
go on the black road towards the end with the easel===(g / go :arg1 (r / road :mod (b / black) :arg2 (e / end)))===event on the mod obj towards the obj with the obj===( e / event  :arg1 (o / obj :mod (m / mod) :arg2 (o / obj)))
at the next junction of yellow and black , take a left===(l / obj :mod (y / yellow) :mod (b / black) :arg2 (j / join) :time (n / next))===at the mod obj of mod and mod , event a mod===(o / obj :mod (m / mod) :mod (m / mod) :arg2 (j / join) :time (m / mod))
when the hall ends , take a right===(e / end :arg1 (t / take :arg1 (e2 / entitle)))===when the obj event , event a obj===(e / end :arg1 ( e / event  :arg1 (e2 / entitle)))
when the hall ends again , take another right===(e / end :arg1 (e2 / entitle :mod (a / another)) :mod (a2 / again))===when the obj event mod , event another obj===(e / end :arg1 (e2 / entitle :mod (a / another)) :mod (a2 / mod))
x is at the end of this hall===(e / end :arg1 (t / this))===obj event at the obj of thevent obj===(o / obj :arg1 (t / thevent))
face and move to the lamp===(a / and :op1 (f / face) :op2 (m / move))===obj and obj to the obj===(a / and :op1 (o / obj) :op2 (o / obj))
turn left===(l / obj :arg1 (t / turn))===obj mod===(o / obj :arg1 (o / obj))
move forward===(m / move :arg1 (f / forward))===obj mod===(o / obj :arg1 (m / mod))
turn right===(t / turn :arg1 (r / right))===obj obj===(o / obj :arg1 (o / obj))
move to the easel and turn left===(m / move :arg1 (l / obj :arg0 (t / turn)))===obj to the obj and obj mod===(o / obj :arg1 (o / obj :arg0 (o / obj)))
move forward and turn right===(a / and :op1 (m / move :direction (f / forward)) :op2 (t / turn :mod (r / right)))===event obj and event mod===(a / and :op1 ( e / event  :direction (o / obj)) :op2 (t / event :mod (m / mod)))
move along the blue and turn left at the first alley===(m / move :arg1 (o / ordinal-entity :value 1) :location (a / along :op1 (t / turn :arg1-of (l / obj))))===obj along the obj and obj mod at the mod obj===(o / obj :arg1 (o / ordinal-entity :value 1) :location (a / along :op1 (o / obj :arg1-of (o / obj))))
move towards the easel and turn right at the first alley===(a / and :op1 (m / move) :op2 (t / turn :arg1 (r / right :op1 (o / ordinal-entity :value 1))))===obj towards the obj and event mod at the mod obj===(a / and :op1 (o / obj) :op2 ( e / event  :arg1 (r / mod :op1 (o / ordinal-entity :value 1))))
the end of this alley is x===(e / end :arg1 (t / this))===the obj of thevent obj event mod===(o / obj :arg1 (t / thevent))
continue until you get to the grey floor===(c / continue :arg1 (g / get) :time (u / until :op1 g))===obj until you event to the obj obj===(o / obj :arg1 ( e / event ) :time (u / until :op1 g))
continue down the grey floor until you get to the intersection one movement before the yellow and grey floors intersect===(c / continue :arg1 (g / get :arg1 (m / movement :mod 1)) :time (u / until :op1 x) :time (b / before :op1 (x / yellow)))===event down the mod obj until you event to the obj one obj before the obj and mod objs event===( e / event  :arg1 (g / event :arg1 (o / obj :mod 1)) :time (u / until :op1 x) :time (b / before :op1 (o / obj)))
go straight until you get to the intersection with the grey floor===(g / go :time (u / until :op1 (g2 / get :arg0 g)))===event mod until you event to the obj with the obj obj===( e / event  :time (u / until :op1 (g2 / event :arg0 g)))
with your back to the wall turn left===(b / back :arg2 x :arg2 (l / obj :arg1 (w / wall :arg1-of (x / turn))))===with your obj to the obj obj mod===(o / obj :arg2 x :arg2 (o / obj :arg1 (o / obj :arg1-of (o / obj))))
move to the next alley and turn left===(m / move :arg2 (t / turn :arg1-of (l / obj) :time (n / next)))===obj to the mod obj and obj mod===(o / obj :arg2 (o / obj :arg1-of (o / obj) :time (m / mod)))
move along the wooden floor to the chair===(m / move :arg1 (a / along :op1 (c / chair)))===obj along the mod obj to the obj===(o / obj :arg1 (a / along :op1 (o / obj)))
in front of you is a hatrack===(i / in-front-of :arg0 i)===in obj of you event a obj===(i / in-obj-of :arg0 i)
this is x===(t / this)===thevent event mod===(t / thevent)
orient yourself along the wooden-floored hall===(a / along :arg0 a)===obj yourself along the mod obj===(a / along :arg0 a)
the bare concrete hall should be to your right===(r / recommend :arg1 (e / entitle :arg2 (c / concrete)) :arg1 c)===the obj mod obj should event to your obj===(r / recommend :arg1 (e / entitle :arg2 (m / mod)) :arg1 c)
go forward one segment===(g / go :arg1 (U / UNK :mod 1 :direction (f / forward)))===event mod one obj===( e / event  :arg1 (U / UNK :mod 1 :direction (m / mod)))
turn right into the brick hall===(t / turn :arg1 (r / right))===event mod into the obj obj===( e / event  :arg1 (m / mod))
go forward until you reach the intersection with the stone floor===(r / reach :arg1 (g / go :arg1 (s / stone-throwing)) :direction (f / forward) :time (u / until :op1 s))===event mod until you event the obj with the obj obj===( e / event  :arg1 (g / event :arg1 (o / obj-throwing)) :direction (m / mod) :time (u / until :op1 s))
you will pass a lamp===(p / pass :arg1 p)===you will event a obj===( e / event  :arg1 p)
i believe it is six segments forward===(b / believe :arg1 (f / forward :year 6 :arg0 f))===obj belobjeve objt objs sobjx obj mod===(b / belobjeve :arg1 (f / mod :year 6 :arg0 f))
at the stone-floored hall , turn right===(t / turn :arg1 (r / right))===at the mod obj , event mod===( e / event  :arg1 (m / mod))
go forward two segments to the intersection of the stone floor and the yellow-tiled floor===(g / go :arg1 (a / and :op1 (f / forward) :op2 (p / person :poss (s / stone-throwing) :mod 2)))===event mod two obj to the obj of the obj obj and the mod obj===( e / event  :arg1 (a / and :op1 (m / mod) :op2 (p / person :poss (o / obj-throwing) :mod 2)))
you should be facing an easel one segment away===(r / recommend :arg1 (f / face :arg0 x :arg1 (x / amr-unknown)))===you should event event an mod one obj mod===(r / recommend :arg1 (f / face :arg0 x :arg1 (x / amr-unknown)))
this is position x===(p / position :domain (t / this))===thevent event obj obj===(o / obj :domain (t / thevent))
orient yourself along the stone hall with the end of the hall containing the easel at your back===(a / along :arg0 x :arg1 (x / stone-throwing) :location a :arg1 (c / contain :arg0 x :arg1 (e / end :arg1 (b / back) :location a)))===obj yourself along the obj obj with the obj of the obj event the obj at your obj===(a / along :arg0 x :arg1 (o / obj-throwing) :location a :arg1 (c / contain :arg0 x :arg1 (o / obj :arg1 (o / obj) :location a)))
the bench in the bare concrete hall should be to your right===(r / recommend :arg1 x :arg1 (e / entitle :arg2 (x / concrete)))===the obj in the obj mod obj should event to your obj===(r / recommend :arg1 x :arg1 (e / entitle :arg2 (m / mod)))
go forward two segments to the intersection with the blue-tiled hall===(g / go :arg0 x :arg1 (f / forward :op1 (x / person :mod 2)))===event mod two obj to the obj with the mod obj===( e / event  :arg0 x :arg1 (f / mod :op1 (x / person :mod 2)))
turn left===(l / obj :arg1 (t / turn))===obj mod===(o / obj :arg1 (o / obj))
go forward two segments along the blue-tiled hall to the intersection with the the pink-flowered carpet hall===(g / go :arg1 (p / person :location (a / along :op1 (f / forward)) :mod 2))===event mod two obj along the mod obj to the obj with the the mod obj obj===( e / event  :arg1 (p / person :location (a / along :op1 (m / mod)) :mod 2))
there is a bench two segments farther down the hall in front of you===(U / UNK :arg1 (f / front :poss (p / person :year 2) :mod (f2 / far)) :poss p)===there event a mod two obj mod down the obj in obj of you===(U / UNK :arg1 (o / obj :poss (p / person :year 2) :mod (f2 / far)) :poss p)
this is position x===(p / position :domain (t / this))===thevent event obj obj===(o / obj :domain (t / thevent))
go towards the lamp and at the corner , take a left===(g / go :arg2 (l / left) :part-of (l2 / left))===event towards the obj and at the obj , event a mod===( e / event  :arg2 (m / mod) :part-of (l2 / mod))
go straight again , and at the next corner , take a right onto the wood path===(g / go :arg1 (o / onto :mod (a / again :location (p / path :time (n / next))) :arg2 (e / entitle)))===event mod mod , and at the mod obj , event a obj onto the obj obj===( e / event  :arg1 (o / onto :mod (a / mod :location (o / obj :time (m / mod))) :arg2 (e / entitle)))
go down to the easel , and take a left===(g / go :arg2 (l / left))===event down to the obj , and event a mod===( e / event  :arg2 (m / mod))
follow this path straight until you see the blue path===(f / follow :arg2 (s / see :arg0 (p / path :time (u / until :op1 p) :mod (t / this)) :arg1 (p2 / path)))===event this obj mod until you event the mod obj===( e / event  :arg2 (s / event :arg0 (o / obj :time (u / until :op1 p) :mod (t / this)) :arg1 (p2 / obj)))
take a right onto the blue path and go straight towards the coat rack===(t / take :arg2 (o / onto :arg0 (p / path :arg2 (e / entitle))) :arg2 (g / go))===event a obj onto the mod obj and event mod obj the obj obj===( e / event  :arg2 (o / onto :arg0 (o / obj :arg2 (e / entitle))) :arg2 (g / event))
one intersection before the coat rack will be x===(U / UNK :time (b / before) :mod 1)===one obj eventfore the obj obj will event mod===(U / UNK :time ( e / event fore) :mod 1)
turn so that the wall is on your right and back===(a / and :op1 (t / turn :arg1 (s / so)) :op2 (w / wall :arg1 w :domain (e / entitle)) :op3 (b / back))===obj mod that the obj event on your obj and mod===(a / and :op1 (o / obj :arg1 (m / mod)) :op2 (o / obj :arg1 w :domain (e / entitle)) :op3 (m / mod))
walk forward once===(o / once :direction (f / forward))===obj mod mod===(o / mod :direction (m / mod))
turn right===(t / turn :arg1 (r / right))===obj obj===(o / obj :arg1 (o / obj))
walk forward maybe four times and you should be at the intersection of blue and brown===(r / recommend :arg1 (b / brown :arg2 (a / and :op1 (f / forward) :op2 (t / time :mod 4) :op3 t)))===obj mod mod four obj and you should event at the obj of mod and mod===(r / recommend :arg1 (b / mod :arg2 (a / and :op1 (m / mod) :op2 (t / time :mod 4) :op3 t)))
turn right===(t / turn :arg1 (r / right))===obj obj===(o / obj :arg1 (o / obj))
walk forward twice===(f / forward)===obj obj obj===(o / obj)
if there is a wall on your right side then you are there===(s / side :mod (r / right) :time (t / then :op1 t) :condition (w / wall :arg0 s))===if mod event a obj on your mod obj mod you event mod===(o / obj :mod (m / mod) :time (t / mod :op1 t) :condition (o / obj :arg0 s))
go two segments down the grassy hall to the hat rack===(g / go :arg1 (U / UNK :mod 2))===event two obj down the mod obj to the obj obj===( e / event  :arg1 (U / UNK :mod 2))
turn left===(l / obj :arg1 (t / turn))===obj mod===(o / obj :arg1 (o / obj))
go one segment forward to the intersection with the hall with pink-flowered carpet===(g / go :arg1 (U / UNK :direction (f / forward) :mod 1))===event one obj obj to the obj with the obj with mod obj===( e / event  :arg1 (U / UNK :direction (o / obj) :mod 1))
in this intersection is an easel===(t / this)===in thevent obj event an obj===(t / thevent)
this is position x===(p / position :domain (t / this))===thevent event obj obj===(o / obj :domain (t / thevent))
head down toward the futon/bench===(h / head)===obj down toward the obj===(o / obj)
keep going , till you are at the hat rack===(g / go :arg0 (k / keep :arg0 g) :arg1 g)===event event , event you event at the obj obj===(g / go :arg0 ( e / event  :arg0 g) :arg1 g)
make a left===(m / make :arg1 (l / obj))===event a mod===( e / event  :arg1 (o / obj))
pos x is in that corner===(t / that)===obj obj event in that obj===(t / that)
turn to face the black corridor with the fish on either sides of the walls and an easel at the end===(t / turn :arg2 (a / and :op1 (f / face :accompanier (e / end) :location (s / side :arg1-of (i / include-91 :arg2 (w / wall))) :mod (b / black)) :op2 (f2 / face :time (e2 / end))))===obj to event the mod obj with the obj on either obj of the obj and an obj at the obj===(o / obj :arg2 (a / and :op1 ( e / event  :accompanier (o / obj) :location (s / side :arg1-of (i / include-91 :arg2 (w / wall))) :mod (m / mod)) :op2 (f2 / event :time (e2 / obj))))
walk forward once===(o / once :direction (f / forward))===obj mod mod===(o / mod :direction (m / mod))
turn left===(l / obj :arg1 (t / turn))===obj mod===(o / obj :arg1 (o / obj))
walk forward once===(o / once :direction (f / forward))===obj mod mod===(o / mod :direction (m / mod))
turn right===(t / turn :arg1 (r / right))===obj obj===(o / obj :arg1 (o / obj))
walk forward twice===(f / forward)===obj obj obj===(o / obj)
turn right===(t / turn :arg1 (r / right))===obj obj===(o / obj :arg1 (o / obj))
walk forward once===(o / once :direction (f / forward))===obj mod mod===(o / mod :direction (m / mod))
turn so the wall is on your left===(t / turn :purpose (l / obj :arg1 x :arg0 (x / wall)))===obj mod the obj event on your mod===(o / obj :purpose (o / obj :arg1 x :arg0 (o / obj)))
walk forward once===(o / once :direction (f / forward))===obj mod mod===(o / mod :direction (m / mod))
turn left===(l / obj :arg1 (t / turn))===obj mod===(o / obj :arg1 (o / obj))
walk forward once===(o / once :direction (f / forward))===obj mod mod===(o / mod :direction (m / mod))
from y walk as far as you can===(w / walk :arg2 (p / possible :domain w) :arg2 (f / far))===from mod obj mod mod mod modou can===(o / obj :arg2 (p / possible :domain w) :arg2 (m / mod))
turn right===(t / turn :arg1 (r / right))===obj obj===(o / obj :arg1 (o / obj))
the chair about halfway down is on p-x===(c / chair)===the obj about mod down event on obj===(o / obj)
take the red brick path towards the lamp===(t / take :arg1 (U / UNK :arg1 (p / path) :mod (r / red)))===event the mod obj obj towards the obj===( e / event  :arg1 (U / UNK :arg1 (o / obj) :mod (m / mod)))
at the black road intersection , take a left===(U / UNK :location (l / left) :arg1 (r / road :mod (b / black)))===at the mod obj obj , event a mod===(U / UNK :location (m / mod) :arg1 (o / obj :mod (m / mod)))
follow the black until you meet up with a black easel===(f / follow :arg2 (m / meet :arg0 (b / black :arg1 (b2 / black) :time (u / until :op1 b))))===event the mod until you event up with a mod obj===( e / event  :arg2 (m / event :arg0 (b / mod :arg1 (b2 / mod) :time (u / until :op1 b))))
this is x===(t / this)===thevent event mod===(t / thevent)
take the pink flowered path directly to the other end of the hall===(t / take :arg1 (U / UNK :arg2 (U2 / UNK :mod (e / end) :mod (o / other)) :manner (d / direct) :arg1 (p / path)))===event the obj event mod mod to the mod obj of the obj===( e / event  :arg1 (U / UNK :arg2 (U2 / UNK :mod (o / obj) :mod (m / mod)) :manner (d / direct) :arg1 (m / mod)))
at the intersection where you can only either go right or left on a blue path , this is position x===(p / position :domain (o / or :op1 (c / country) :op2 (p2 / possible :domain x) :op3 (o2 / only) :op4 (g / go :arg1 (e / entitle)) :op5 (l / obj) :location (p3 / path)) :mod (x / this))===at the obj where you can mod mod event mod or mod on a mod obj , thevent event obj obj===(o / obj :domain (o / or :op1 (c / country) :op2 (p2 / possible :domain obj) :op3 (o2 / mod) :op4 ( e / event  :arg1 (e / entitle)) :op5 (o / obj) :location (p3 / obj)) :mod (obj / thevent))
go straight on the pink flowered path to the intersection of the red brick===(g / go :arg1 (U / UNK :arg2 (r / red) :arg1 (p / path)))===event mod on the obj event obj to the obj of the mod obj===( e / event  :arg1 (U / UNK :arg2 (m / mod) :arg1 (o / obj)))
take a left onto the red brick===(t / take :arg1 (U / UNK :arg0 (o / onto :mod (r / red)) :arg2 (l / left)))===event a mod onto the mod obj===( e / event  :arg1 (U / UNK :arg0 (o / onto :mod (m / mod)) :arg2 (m / mod)))
go all the way down until two sections past the lamp===(g / go :arg1 (U / UNK :time (p / past) :mod (a / all)) :arg1 (w / way) :time (u / until :op1 (s / section :mod 2)))===event all the obj down until two obj past the obj===( e / event  :arg1 (U / UNK :time (p / past) :mod (a / all)) :arg1 (o / obj) :time (u / until :op1 (s / section :mod 2)))
take a left here at the intersection of the wood===(t / take :arg1 (U / UNK :duration (h / here) :arg2 (l / left)))===event a mod mod at the obj of the obj===( e / event  :arg1 (U / UNK :duration (m / mod) :arg2 (m / mod)))
go one section down to the bench and you are at position x===(g / go :arg1 (s / section :mod 1) :purpose (p / position :poss g))===event one obj down to the obj and you event at obj obj===( e / event  :arg1 (o / obj :mod 1) :purpose (o / obj :poss g))
forward===(f / forward)===mod===(m / mod)
right into blue floored hallway===(r / right)===mod into mod event obj===(m / mod)
keep going===(k / keep :arg0 x :arg1 (x / go))===event event===( e / event  :arg0 x :arg1 (x / go))
make a rt into the pink flowered floor hallway===(m / make)===event a obj into the obj event obj obj===( e / event )
make 1st rt into dead end===(m / make :arg2 (e / end))===event 1st obj into mod obj===( e / event  :arg2 (o / obj))
face the hatrack in the blue-tiled hallway===(f / face)===obj the obj in the mod obj===(o / obj)
walk the one segment toward it===(U / UNK :mod 1 :arg2 U)===event the one obj toward it===(U / UNK :mod 1 :arg2 U)
turn right===(t / turn :arg1 (r / right))===obj obj===(o / obj :arg1 (o / obj))
follow the blue-tiled hallway to the grass floored hallway at the far end===(f / follow :arg1 (e / end) :time (f2 / far))===event the mod obj to the obj event obj at the mod obj===( e / event  :arg1 (o / obj) :time (f2 / mod))
turn right===(t / turn :arg1 (r / right))===obj obj===(o / obj :arg1 (o / obj))
where this hall intersects the yellow-tiled hall , there should be an empty intersection===(c / country :arg1 (r / recommend) :mod (t / this))===where this obj event the mod obj , there should event an mod obj===(c / country :arg1 (r / recommend) :mod (t / this))
this is position x===(p / position :domain (t / this))===thevent event obj obj===(o / obj :domain (t / thevent))
orient yourself along the stone hall facing the end of the hall containing the easel===(U / UNK :arg1 (c / contain :arg0 x) :location x2 :location (x2 / along :op1 (x / stone-throwing :condition-of (f / face :time (e / end)))))===obj yourself along the obj obj event the obj of the obj event the obj===(U / UNK :arg1 (c / contain :arg0 x) :location x2 :location (x2 / along :op1 (o / obj-throwing :condition-of (f / face :time (o / obj)))))
the bench in the bare concrete hall should be to your left===(r / recommend :arg1 (l / left :mod (c / concrete)) :arg1 c)===the obj in the obj mod obj should event to your mod===(r / recommend :arg1 (l / mod :mod (m / mod)) :arg1 c)
go forward one segment to the intersection with the yellow-tiled floor===(g / go :arg1 (U / UNK :mod 1 :direction (f / forward)))===event mod one obj to the obj with the mod obj===( e / event  :arg1 (U / UNK :mod 1 :direction (m / mod)))
this is position x===(p / position :domain (t / this))===thevent event obj obj===(o / obj :domain (t / thevent))
move to the chair and turn left===(m / move :arg1 (l / obj :arg0 (a / and :op1 (c / chair) :op2 (t / turn))))===obj to the obj and obj mod===(o / obj :arg1 (o / obj :arg0 (a / and :op1 (o / obj) :op2 (o / obj))))
move forward to the stool and turn right===(t / turn :arg1 (m / move :arg1 (f / forward) :arg1 (r / right)))===event mod to the obj and event mod===( e / event  :arg1 (m / event :arg1 (m / mod) :arg1 (m / mod)))
turn left at the chair and face another chair===(l / obj :arg0 (t / turn) :arg1 (a / and :op1 (c / chair) :op2 (c2 / chair :mod (a2 / another) :condition-of (f / face))))===obj mod at the obj and obj another obj===(o / obj :arg0 (o / obj) :arg1 (a / and :op1 (o / obj) :op2 (c2 / obj :mod (a2 / another) :condition-of (o / obj))))
turn right at this second chair and move along brick to the next alley===(t / turn :arg2 (e / entitle :location (a / along :op1 (n / next)) :arg1 (a2 / and :op1 (c / chair) :op2 (m / move)) :ord (o / ordinal-entity :value 2) :mod (t2 / this)))===obj mod at this mod obj and event mod obj to the mod obj===(o / obj :arg2 (e / entitle :location (a / mod :op1 (m / mod)) :arg1 (a2 / and :op1 (o / obj) :op2 ( e / event )) :ord (o / ordinal-entity :value 2) :mod (t2 / this)))
to your left is grey flooring===(l / obj :arg2 l)===to your mod event mod event===(o / obj :arg2 l)
this is x===(t / this)===thevent event mod===(t / thevent)
follow the pink floored area toward the fish walled area===(f / follow :arg1 (a / area :location (a2 / area)))===event the obj event obj toward the obj event obj===( e / event  :arg1 (o / obj :location (a2 / obj)))
stop when the first fish hallway to your left appears===(s / stop :arg1 (a / appear :arg1 (l / obj :ord (o / ordinal-entity :value 1) :arg1 a)))===obj when the mod mod obj to your mod event===(o / obj :arg1 (a / appear :arg1 (o / obj :ord (o / ordinal-entity :value 1) :arg1 a)))
rorward 1===(1 / 1)===mod 1===(1 / 1)
left===(l / obj)===mod===(o / obj)
fwd 1===(1 / 1)===obj 1===(1 / 1)
left===(l / obj)===mod===(o / obj)
forward till 1st right turn===(t / turn :mod (r / right) :direction (f / forward))===mod till 1st mod obj===(o / obj :mod (m / mod) :direction (m / mod))
make a right===(m / make :arg1 (r / right))===event a obj===( e / event  :arg1 (o / obj))
forward 1 space===(s / space :mod 1 :direction (f / forward))===mod 1 obj===(o / obj :mod 1 :direction (m / mod))
place your back against the wall of the t intersection===(U / UNK :arg0 U :prep-against (w / wall))===obj your obj againsobj objhe obj of objhe obj inobjersecobjion===(U / UNK :arg0 U :prep-againsobj (o / obj))
follow the stone hall to your left three segments to the blue-tiled hallway===(f / follow :arg1 (U / UNK :mod 3 :arg2 (l / left) :mod (s / stone-throwing :arg0 s)))===event the obj obj to your mod three obj to the mod objway===( e / event  :arg1 (U / UNK :mod 3 :arg2 (m / mod) :mod (o / obj-throwing :arg0 s)))
turn left at the stool in the blue-tiled hall===(l / obj :arg1 (t / turn))===obj mod at the obj in the mod obj===(o / obj :arg1 (o / obj))
follow this hall past the bench to the hatrack===(f / follow :arg1 (U / UNK :time (p / past) :mod (t / this)))===event this obj past the obj to the obj===( e / event  :arg1 (U / UNK :time (p / past) :mod (t / this)))
turn left into the bare concrete floored hall whose intersection with the blue-tiled hall contains the hatrack===(l / obj :arg0 (t / turn) :arg1 (c / contain) :arg2 (c2 / concrete))===obj mod into the obj obj event obj whose obj with the mod obj event the obj===(o / obj :arg0 (o / obj) :arg1 (c / contain) :arg2 (c2 / obj))
go forward one segment to the corner===(g / go :arg1 (U / UNK :mod 1 :direction (f / forward)))===event mod one obj to the obj===( e / event  :arg1 (U / UNK :mod 1 :direction (m / mod)))
this is position x===(p / position :domain (t / this))===thevent event obj obj===(o / obj :domain (t / thevent))
take the red brick path straight towards the lamp and all the way until the end of the hall===(t / take :arg1 (U / UNK :arg2 (a / all) :arg1 (p / path) :mod (r / red)) :arg1 (w / way) :time (u / until :op1 (e / end)))===event the mod obj obj event towards the obj and all the obj until the obj of the obj===( e / event  :arg1 (U / UNK :arg2 (a / all) :arg1 (o / obj) :mod (m / mod)) :arg1 (o / obj) :time (u / until :op1 (o / obj)))
at the intersection with the green path , take a right and again , go to the end of the hall where the corner meets with the yellow path===(g / go :arg1 (a / and :op1 (g2 / green :arg2 (e / entitle :arg1 (p / path))) :op2 (g3 / green :mod (a2 / again :arg1 (p2 / path)))) :purpose (e2 / end :arg1 (c / city :location-of (m / meet :arg0 (p3 / path) :arg1 (y / yellow)))))===at the obj with the mod obj , event a obj and mod , event to the obj of the obj where the obj obj with the mod obj===( e / event  :arg1 (a / and :op1 (g2 / mod :arg2 (e / entitle :arg1 (o / obj))) :op2 (g3 / mod :mod (a2 / mod :arg1 (p2 / obj)))) :purpose (e2 / obj :arg1 (c / city :location-of (m / meet :arg0 (p3 / obj) :arg1 (m / mod)))))
this is position x===(p / position :domain (t / this))===thevent event obj obj===(o / obj :domain (t / thevent))
orient yourself to face the longer portion of the brick hall===(f / face :arg0 x :arg1 (x / portion :duration (l / long)))===obj yourself to event the mod obj of the obj obj===( e / event  :arg0 x :arg1 (o / obj :duration (l / long)))
the hatrack in the brick hall should be one segment behind you===(i / include-91 :arg2 (r / recommend) :arg2 (b / behind :op1 b))===the obj in the obj obj should event one obj eventhind you===(i / include-91 :arg2 (r / recommend) :arg2 ( e / event hind :op1 b))
the bench at the intersection of the pink-flowered carpet hall and the yellow-tiled hall at your left ; the intersection of the blue-tiled hall the the pink-flowered carpet hall to your right===(U / UNK :duration (U2 / UNK :arg1 (e / entitle) :arg0 x) :poss (x / and :op1 (l / left) :op2 (l2 / left)) :location U)===the obj at the obj of the mod obj obj and the mod obj at your mod ; the obj of the mod obj the the mod obj obj to your obj===(U / UNK :duration (U2 / UNK :arg1 (e / entitle) :arg0 x) :poss (x / and :op1 (m / mod) :op2 (l2 / mod)) :location U)
go forward three segments===(g / go :arg1 (f / forward :op1 (U / UNK :mod 3)))===event mod three obj===( e / event  :arg1 (f / mod :op1 (U / UNK :mod 3)))
you are now in position x===(p / position :time x :time (x / now))===you event mod in obj obj===(o / obj :time obj :time (obj / mod))
there should be a bare concrete floored hall at the this intersection ; pictures of butterflies in the hall to the right , leading to an empty t intersection with the blue-tiled hall and pictures of the eiffel tower leading to an empty t intersection to your left===(r / recommend :arg1 (c / concrete) :arg2 (t / this) :poss (p / picture :purpose (l / lead :arg2 (l2 / obj) :arg0 x)) :arg1 (x / entitle :arg2 (l3 / lead :arg1 (p2 / picture))))===objhere should evenobj a mod obj evenobj obj aobj objhe objhis obj ; obj of obj in objhe obj objo objhe obj , evenobj objo an mod obj obj wiobjh objhe blue-objiled obj and obj of objhe obj objower evenobj objo an mod obj obj objo your lefobj===(r / recommend :arg1 (o / obj) :arg2 (obj / objhis) :poss (p / picobjure :purpose (l / lead :arg2 (l2 / obj) :arg0 x)) :arg1 (x / enobjiobjle :arg2 (l3 / lead :arg1 (p2 / picobjure))))
go to the blue floored area===(g / go :purpose (a / area))===event to the obj event obj===( e / event  :purpose (o / obj))
pos x is inbetween the two pieces of furnitute in this hallway===(U / UNK :arg2 (t / this) :arg2 (p / piece :mod 2))===obj obj event mod the two obj of obj in thevent obj===(U / UNK :arg2 (t / thevent) :arg2 (p / piece :mod 2))
take the yellow path all the way down to the wood path intersection===(t / take :arg1 (w / way :mod (a / all :degree (p / path) :mod (y / yellow))) :arg2 (p2 / path))===event the mod obj all the obj down to the obj obj obj===( e / event  :arg1 (o / obj :mod (a / all :degree (o / obj) :mod (m / mod))) :arg2 (p2 / obj))
here , take a right onto the wood path===(e / entitle :arg2 (o / onto :op1 (p / path)) :arg2 (h / here))===mod , event a obj onto the obj obj===(e / entitle :arg2 (o / onto :op1 (o / obj)) :arg2 (m / mod))
go to the intersection of plain cement and wood path===(g / go :purpose (p / path :poss (p2 / plain)))===event to the obj of mod obj and obj obj===( e / event  :purpose (o / obj :poss (p2 / mod)))
this is position x===(p / position :domain (t / this))===thevent event obj obj===(o / obj :domain (t / thevent))
face toward the hatrack===(f / face)===obj toward the obj===(o / obj)
walk the one segment to it===(U / UNK :arg0 U :mod 1)===event the one obj to it===(U / UNK :arg0 U :mod 1)
turn right in the blue-tiled hall===(t / turn :mod (r / right))===obj mod in the mod obj===(o / obj :mod (m / mod))
go forward until you reach a hall with pink flowered carpet===(g / go :arg1 (r / reach) :direction (f / forward) :time (u / until :op1 f))===event mod until you event a obj with obj event obj===( e / event  :arg1 (r / event) :direction (m / mod) :time (u / until :op1 f))
turn right===(t / turn :arg1 (r / right))===obj obj===(o / obj :arg1 (o / obj))
